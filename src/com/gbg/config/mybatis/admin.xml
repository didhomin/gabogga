<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gbg.member.dao.AdminDao">
    <select id="address" parameterType="String" resultType="ListDto">
        select address1,name gname
        from guesthouse
        where case	 
        <![CDATA[when address1 < 'ㄱ' then upper(substr(address1, 1, 1))  
			 			when ascii('ㄱ') <= ascii(address1) and ascii(address1)<= ascii('ㅎ') then address1  
			 			when address1 < '나' then 'ㄱ' 
			 			when address1 < '다' then 'ㄴ' 
			 			when address1 < '라' then 'ㄷ' 
			 			when address1 < '마' then 'ㄹ' 
			 			when address1 < '바' then 'ㅁ' 
			 			when address1 < '사' then 'ㅂ' 
			 			when address1 < '아' then 'ㅅ' 
			 			when address1 < '자' then 'ㅇ' 
			 			when address1 < '차' then 'ㅈ' 
			 			when address1 < '카' then 'ㅊ' 
			 			when address1 < '타' then 'ㅋ' 
			 			when address1 < '파' then 'ㅌ' 
			 			when address1 < '하' then 'ㅍ' 
			 			else 'ㅎ' ]]>
			 	end = upper(#{address1}) or address1 like '%'||#{address1}||'%'
    </select>
	
	<select id="main"  resultType="ListDto">
		select address1, gh.guesthouse_id ghId, name gname, room_count roomCount, room_pay roomPay, introduce, lat, lng, picture pictureGh,a.good
		from guesthouse gh
		left outer join (select guesthouse_id,count(*) good
		from house_check hc
		group by guesthouse_id) a on a.guesthouse_id=gh.guesthouse_id
		order by a.good desc
	</select>
	<select id="mainprice"  resultType="ListDto">
		select gh.guesthouse_id ghId, name gname, room_count roomCount, room_pay roomPay, introduce, lat, lng, picture pictureGh,a.good,room_pay
		from guesthouse gh
		left outer join (select guesthouse_id,count(*) good
		from house_check hc
		group by guesthouse_id) a on a.guesthouse_id=gh.guesthouse_id
		order by room_pay
	</select>
	<select id="man"  resultType="com.gbg.member.model.StatisticsDto">
		select substr(reg_date,4,2) as mon,count(*) cnt
		from users
		where gender=1
		group by substr(reg_date,4,2)
		order by 1
	</select>
	<select id="woman"  resultType="com.gbg.member.model.StatisticsDto">
		select substr(reg_date,4,2) as mon,count(*) cnt
		from users
		where gender=2
		group by substr(reg_date,4,2)
		order by 1
	</select>
	
	<resultMap id="region" type="java.util.Map">
		<result javaType="java.lang.String" column="count" property="count"/>
		<result javaType="java.lang.String" column="addressgroup" property="addressgroup"/>
	</resultMap>
	
	<select id="regionSelect" resultMap="region">
		select count(address1) as count, substr(address1, 0, instr(address1, ' ')) as addressgroup
		from guesthouse
		group by substr(address1, 0, instr(address1, ' '))
	</select>
	
	<resultMap id="reservation" type="java.util.Map">
		<result javaType="java.lang.String" column="month" property="month"/>
		<result javaType="java.lang.String" column="count" property="count"/>
	</resultMap>
	
	<select id="reservationSelect" resultMap="reservation">
		select to_char(reservation_date, 'MM') as month, count(reservation_date) as count
		from reservation 
		where to_char(reservation_date, 'YYMM') between '1701' and '1712'
		group by to_char(reservation_date, 'MM')
		order by to_char(reservation_date, 'MM') asc
	</select>
	
	   <delete id="memberAdmindelete" parameterType="String"  >
     delete users
     where user_Id=#{userId}
    </delete>
    <update id="memberAdminBlack" parameterType="String">
     update users
		set type='3' 
		where user_id =#{id} 
    </update>
       <update id="memberAdminSoso" parameterType="String">
     update users
		set type='1' 
		where user_id =#{id} 
    </update>
    
    <select id="listMemberAdmin" resultType="com.gbg.member.model.UsersDto">
   select d.*
	from(
		select rownum rn, c.*
		from(
			select user_id userId ,name ,email,tel
			from users
			where type =#{bcode}

		<if test="key!='' and word!=''">
            <if test="key == 'name'">
                and name like '%'||#{word}||'%'
            </if>
            <if test="key != 'name'">
                and ${key} = #{word}
            </if>
        </if> 
			order by user_id desc
			) c
		where rownum &lt;= #{end} 
		) d
	where rn &gt; #{start} 
    </select>
     <select id="blacklist" resultType="com.gbg.member.model.UsersDto">
    select d.*
	from(
		select rownum rn, c.*
		from(
			select user_id userId ,name ,email,tel
			from users
			where type =#{bcode}

		<if test="key!='' and word!=''">
            <if test="key == 'name'">
                and name like '%'||#{word}||'%'
            </if>
            <if test="key != 'name'">
                and ${key} = #{word}
            </if>
        </if> 
			order by user_id desc
			) c
		where rownum &lt;= #{end} 
		) d
	where rn &gt;= #{start} 
    </select>
    
    <select id="searchMemberAdmin" parameterType="String" resultType="com.gbg.member.model.UsersDto">
     select tel , user_Id,name, email,gender,reg_Date regDate from users
     where user_Id=#{id}
    </select>
    
      <select id="getNextSeq" resultType="int">
        select seq_board_seq.nextval
        from dual
    </select>
    
    
    <select id="newArticleAdCount" parameterType="int" resultType="int">
        select count(user_id)
        from users
        where type=#{bcode}
    </select>
    
    <select id="totalArticleAdCount" parameterType="java.util.Map" resultType="int">
        select count(user_id)
        from users
 		where type =#{bcode}
        <if test="key!='' and word!=''">
            <if test="key == 'name'">
                and name like '%'||#{word}||'%'
            </if>
            <if test="key != 'name'">
                and ${key} = #{word}
            </if>
        </if> 
    </select>
	
</mapper>